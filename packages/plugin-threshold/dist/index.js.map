{"version":3,"file":"index.js","names":["threshold","cb","max","replace","autoGreyscale","throwError","call","constructor","limit255","greyscale","scanQuiet","bitmap","width","height","x","y","idx","grey","data","isNodePattern"],"sources":["../src/index.js"],"sourcesContent":["import { isNodePattern, throwError } from '@jimp/utils';\n\n/**\n * Applies a minimum color threshold to a greyscale image.  Converts image to greyscale by default\n * @param {number} options object\n *  max: A number auto limited between 0 - 255\n *  replace: (optional) A number auto limited between 0 - 255 (default 255)\n *  autoGreyscale: (optional) A boolean whether to apply greyscale beforehand (default true)\n * @param {number} cb (optional) a callback for when complete\n * @return {this} this for chaining of methods\n */\nexport default () => ({\n  threshold({ max, replace = 255, autoGreyscale = true }, cb) {\n    if (typeof max !== 'number') {\n      return throwError.call(this, 'max must be a number', cb);\n    }\n\n    if (typeof replace !== 'number') {\n      return throwError.call(this, 'replace must be a number', cb);\n    }\n\n    if (typeof autoGreyscale !== 'boolean') {\n      return throwError.call(this, 'autoGreyscale must be a boolean', cb);\n    }\n\n    max = this.constructor.limit255(max);\n    replace = this.constructor.limit255(replace);\n\n    if (autoGreyscale) {\n      this.greyscale();\n    }\n\n    this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, (x, y, idx) => {\n      const grey =\n        this.bitmap.data[idx] < max ? this.bitmap.data[idx] : replace;\n\n      this.bitmap.data[idx] = grey;\n      this.bitmap.data[idx + 1] = grey;\n      this.bitmap.data[idx + 2] = grey;\n    });\n\n    if (isNodePattern(cb)) {\n      cb.call(this, null, this);\n    }\n\n    return this;\n  }\n});\n"],"mappings":";;;;;;;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;eACe;EAAA,OAAO;IACpBA,SADoB,2BACoCC,EADpC,EACwC;MAAA;;MAAA,IAAhDC,GAAgD,QAAhDA,GAAgD;MAAA,wBAA3CC,OAA2C;MAAA,IAA3CA,OAA2C,6BAAjC,GAAiC;MAAA,8BAA5BC,aAA4B;MAAA,IAA5BA,aAA4B,mCAAZ,IAAY;;MAC1D,IAAI,OAAOF,GAAP,KAAe,QAAnB,EAA6B;QAC3B,OAAOG,iBAAA,CAAWC,IAAX,CAAgB,IAAhB,EAAsB,sBAAtB,EAA8CL,EAA9C,CAAP;MACD;;MAED,IAAI,OAAOE,OAAP,KAAmB,QAAvB,EAAiC;QAC/B,OAAOE,iBAAA,CAAWC,IAAX,CAAgB,IAAhB,EAAsB,0BAAtB,EAAkDL,EAAlD,CAAP;MACD;;MAED,IAAI,OAAOG,aAAP,KAAyB,SAA7B,EAAwC;QACtC,OAAOC,iBAAA,CAAWC,IAAX,CAAgB,IAAhB,EAAsB,iCAAtB,EAAyDL,EAAzD,CAAP;MACD;;MAEDC,GAAG,GAAG,KAAKK,WAAL,CAAiBC,QAAjB,CAA0BN,GAA1B,CAAN;MACAC,OAAO,GAAG,KAAKI,WAAL,CAAiBC,QAAjB,CAA0BL,OAA1B,CAAV;;MAEA,IAAIC,aAAJ,EAAmB;QACjB,KAAKK,SAAL;MACD;;MAED,KAAKC,SAAL,CAAe,CAAf,EAAkB,CAAlB,EAAqB,KAAKC,MAAL,CAAYC,KAAjC,EAAwC,KAAKD,MAAL,CAAYE,MAApD,EAA4D,UAACC,CAAD,EAAIC,CAAJ,EAAOC,GAAP,EAAe;QACzE,IAAMC,IAAI,GACR,KAAI,CAACN,MAAL,CAAYO,IAAZ,CAAiBF,GAAjB,IAAwBd,GAAxB,GAA8B,KAAI,CAACS,MAAL,CAAYO,IAAZ,CAAiBF,GAAjB,CAA9B,GAAsDb,OADxD;QAGA,KAAI,CAACQ,MAAL,CAAYO,IAAZ,CAAiBF,GAAjB,IAAwBC,IAAxB;QACA,KAAI,CAACN,MAAL,CAAYO,IAAZ,CAAiBF,GAAG,GAAG,CAAvB,IAA4BC,IAA5B;QACA,KAAI,CAACN,MAAL,CAAYO,IAAZ,CAAiBF,GAAG,GAAG,CAAvB,IAA4BC,IAA5B;MACD,CAPD;;MASA,IAAI,IAAAE,oBAAA,EAAclB,EAAd,CAAJ,EAAuB;QACrBA,EAAE,CAACK,IAAH,CAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB;MACD;;MAED,OAAO,IAAP;IACD;EAnCmB,CAAP;AAAA,C"}
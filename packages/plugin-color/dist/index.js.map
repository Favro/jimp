{"version":3,"file":"index.js","names":["applyKernel","im","kernel","x","y","value","size","length","kx","ky","idx","getPixelIndex","bitmap","data","isDef","v","greyscale","cb","scanQuiet","width","height","grey","parseInt","isNodePattern","call","mix","clr","clr2","p","r","g","b","colorFn","actions","Array","isArray","throwError","map","action","apply","params","tinyColor","toRgb","colorModifier","i","amount","constructor","limit255","forEach","brightness","val","contrast","factor","adjust","Math","floor","posterize","n","grayscale","opacity","f","sepia","red","green","blue","fade","convolution","edgeHandling","EDGE_EXTEND","newData","Buffer","from","kRows","kCols","rowEnd","colEnd","rowIni","colIni","weight","rSum","gSum","bSum","ri","gi","bi","xi","yi","idxi","row","col","opaque","pixelate","w","h","source","cloneQuiet","xx","yx","convolute","ksize","color","colour"],"sources":["../src/index.js"],"sourcesContent":["import tinyColor from 'tinycolor2';\nimport { throwError, isNodePattern } from '@jimp/utils';\n\nfunction applyKernel(im, kernel, x, y) {\n  const value = [0, 0, 0];\n  const size = (kernel.length - 1) / 2;\n\n  for (let kx = 0; kx < kernel.length; kx += 1) {\n    for (let ky = 0; ky < kernel[kx].length; ky += 1) {\n      const idx = im.getPixelIndex(x + kx - size, y + ky - size);\n\n      value[0] += im.bitmap.data[idx] * kernel[kx][ky];\n      value[1] += im.bitmap.data[idx + 1] * kernel[kx][ky];\n      value[2] += im.bitmap.data[idx + 2] * kernel[kx][ky];\n    }\n  }\n\n  return value;\n}\n\nconst isDef = v => typeof v !== 'undefined' && v !== null;\n\nfunction greyscale(cb) {\n  this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(\n    x,\n    y,\n    idx\n  ) {\n    const grey = parseInt(\n      0.2126 * this.bitmap.data[idx] +\n        0.7152 * this.bitmap.data[idx + 1] +\n        0.0722 * this.bitmap.data[idx + 2],\n      10\n    );\n\n    this.bitmap.data[idx] = grey;\n    this.bitmap.data[idx + 1] = grey;\n    this.bitmap.data[idx + 2] = grey;\n  });\n\n  if (isNodePattern(cb)) {\n    cb.call(this, null, this);\n  }\n\n  return this;\n}\n\nfunction mix(clr, clr2, p = 50) {\n  return {\n    r: (clr2.r - clr.r) * (p / 100) + clr.r,\n    g: (clr2.g - clr.g) * (p / 100) + clr.g,\n    b: (clr2.b - clr.b) * (p / 100) + clr.b\n  };\n}\n\nfunction colorFn(actions, cb) {\n  if (!actions || !Array.isArray(actions)) {\n    return throwError.call(this, 'actions must be an array', cb);\n  }\n\n  actions = actions.map(action => {\n    if (action.apply === 'xor' || action.apply === 'mix') {\n      action.params[0] = tinyColor(action.params[0]).toRgb();\n    }\n\n    return action;\n  });\n\n  this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, (x, y, idx) => {\n    let clr = {\n      r: this.bitmap.data[idx],\n      g: this.bitmap.data[idx + 1],\n      b: this.bitmap.data[idx + 2]\n    };\n\n    const colorModifier = (i, amount) =>\n      this.constructor.limit255(clr[i] + amount);\n\n    actions.forEach(action => {\n      if (action.apply === 'mix') {\n        clr = mix(clr, action.params[0], action.params[1]);\n      } else if (action.apply === 'tint') {\n        clr = mix(clr, { r: 255, g: 255, b: 255 }, action.params[0]);\n      } else if (action.apply === 'shade') {\n        clr = mix(clr, { r: 0, g: 0, b: 0 }, action.params[0]);\n      } else if (action.apply === 'xor') {\n        clr = {\n          r: clr.r ^ action.params[0].r,\n          g: clr.g ^ action.params[0].g,\n          b: clr.b ^ action.params[0].b\n        };\n      } else if (action.apply === 'red') {\n        clr.r = colorModifier('r', action.params[0]);\n      } else if (action.apply === 'green') {\n        clr.g = colorModifier('g', action.params[0]);\n      } else if (action.apply === 'blue') {\n        clr.b = colorModifier('b', action.params[0]);\n      } else {\n        if (action.apply === 'hue') {\n          action.apply = 'spin';\n        }\n\n        clr = tinyColor(clr);\n\n        if (!clr[action.apply]) {\n          return throwError.call(\n            this,\n            'action ' + action.apply + ' not supported',\n            cb\n          );\n        }\n\n        clr = clr[action.apply](...action.params).toRgb();\n      }\n    });\n\n    this.bitmap.data[idx] = clr.r;\n    this.bitmap.data[idx + 1] = clr.g;\n    this.bitmap.data[idx + 2] = clr.b;\n  });\n\n  if (isNodePattern(cb)) {\n    cb.call(this, null, this);\n  }\n\n  return this;\n}\n\nexport default () => ({\n  /**\n   * Adjusts the brightness of the image\n   * @param {number} val the amount to adjust the brightness, a number between -1 and +1\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp }this for chaining of methods\n   */\n  brightness(val, cb) {\n    if (typeof val !== 'number') {\n      return throwError.call(this, 'val must be numbers', cb);\n    }\n\n    if (val < -1 || val > +1) {\n      return throwError.call(\n        this,\n        'val must be a number between -1 and +1',\n        cb\n      );\n    }\n\n    this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(\n      x,\n      y,\n      idx\n    ) {\n      if (val < 0.0) {\n        this.bitmap.data[idx] = this.bitmap.data[idx] * (1 + val);\n        this.bitmap.data[idx + 1] = this.bitmap.data[idx + 1] * (1 + val);\n        this.bitmap.data[idx + 2] = this.bitmap.data[idx + 2] * (1 + val);\n      } else {\n        this.bitmap.data[idx] =\n          this.bitmap.data[idx] + (255 - this.bitmap.data[idx]) * val;\n        this.bitmap.data[idx + 1] =\n          this.bitmap.data[idx + 1] + (255 - this.bitmap.data[idx + 1]) * val;\n        this.bitmap.data[idx + 2] =\n          this.bitmap.data[idx + 2] + (255 - this.bitmap.data[idx + 2]) * val;\n      }\n    });\n\n    if (isNodePattern(cb)) {\n      cb.call(this, null, this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Adjusts the contrast of the image\n   * @param {number} val the amount to adjust the contrast, a number between -1 and +1\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp }this for chaining of methods\n   */\n  contrast(val, cb) {\n    if (typeof val !== 'number') {\n      return throwError.call(this, 'val must be numbers', cb);\n    }\n\n    if (val < -1 || val > +1) {\n      return throwError.call(\n        this,\n        'val must be a number between -1 and +1',\n        cb\n      );\n    }\n\n    const factor = (val + 1) / (1 - val);\n\n    function adjust(value) {\n      value = Math.floor(factor * (value - 127) + 127);\n\n      return value < 0 ? 0 : value > 255 ? 255 : value;\n    }\n\n    this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(\n      x,\n      y,\n      idx\n    ) {\n      this.bitmap.data[idx] = adjust(this.bitmap.data[idx]);\n      this.bitmap.data[idx + 1] = adjust(this.bitmap.data[idx + 1]);\n      this.bitmap.data[idx + 2] = adjust(this.bitmap.data[idx + 2]);\n    });\n\n    if (isNodePattern(cb)) {\n      cb.call(this, null, this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Apply a posterize effect\n   * @param {number} n the amount to adjust the contrast, minimum threshold is two\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp }this for chaining of methods\n   */\n  posterize(n, cb) {\n    if (typeof n !== 'number') {\n      return throwError.call(this, 'n must be numbers', cb);\n    }\n\n    if (n < 2) {\n      n = 2;\n    } // minimum of 2 levels\n\n    this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(\n      x,\n      y,\n      idx\n    ) {\n      this.bitmap.data[idx] =\n        (Math.floor((this.bitmap.data[idx] / 255) * (n - 1)) / (n - 1)) * 255;\n      this.bitmap.data[idx + 1] =\n        (Math.floor((this.bitmap.data[idx + 1] / 255) * (n - 1)) / (n - 1)) *\n        255;\n      this.bitmap.data[idx + 2] =\n        (Math.floor((this.bitmap.data[idx + 2] / 255) * (n - 1)) / (n - 1)) *\n        255;\n    });\n\n    if (isNodePattern(cb)) {\n      cb.call(this, null, this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Removes colour from the image using ITU Rec 709 luminance values\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp }this for chaining of methods\n   */\n  greyscale,\n\n  // Alias of greyscale for our American friends\n  grayscale: greyscale,\n\n  /**\n   * Multiplies the opacity of each pixel by a factor between 0 and 1\n   * @param {number} f A number, the factor by which to multiply the opacity of each pixel\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp }this for chaining of methods\n   */\n  opacity(f, cb) {\n    if (typeof f !== 'number')\n      return throwError.call(this, 'f must be a number', cb);\n    if (f < 0 || f > 1)\n      return throwError.call(this, 'f must be a number from 0 to 1', cb);\n\n    this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(\n      x,\n      y,\n      idx\n    ) {\n      const v = this.bitmap.data[idx + 3] * f;\n      this.bitmap.data[idx + 3] = v;\n    });\n\n    if (isNodePattern(cb)) {\n      cb.call(this, null, this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Applies a sepia tone to the image\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp }this for chaining of methods\n   */\n  sepia(cb) {\n    this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(\n      x,\n      y,\n      idx\n    ) {\n      let red = this.bitmap.data[idx];\n      let green = this.bitmap.data[idx + 1];\n      let blue = this.bitmap.data[idx + 2];\n\n      red = red * 0.393 + green * 0.769 + blue * 0.189;\n      green = red * 0.349 + green * 0.686 + blue * 0.168;\n      blue = red * 0.272 + green * 0.534 + blue * 0.131;\n\n      this.bitmap.data[idx] = red < 255 ? red : 255;\n      this.bitmap.data[idx + 1] = green < 255 ? green : 255;\n      this.bitmap.data[idx + 2] = blue < 255 ? blue : 255;\n    });\n\n    if (isNodePattern(cb)) {\n      cb.call(this, null, this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Fades each pixel by a factor between 0 and 1\n   * @param {number} f A number from 0 to 1. 0 will haven no effect. 1 will turn the image completely transparent.\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp }this for chaining of methods\n   */\n  fade(f, cb) {\n    if (typeof f !== 'number') {\n      return throwError.call(this, 'f must be a number', cb);\n    }\n\n    if (f < 0 || f > 1) {\n      return throwError.call(this, 'f must be a number from 0 to 1', cb);\n    }\n\n    // this method is an alternative to opacity (which may be deprecated)\n    this.opacity(1 - f);\n\n    if (isNodePattern(cb)) {\n      cb.call(this, null, this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Adds each element of the image to its local neighbors, weighted by the kernel\n   * @param {array} kernel a matrix to weight the neighbors sum\n   * @param {string} edgeHandling (optional) define how to sum pixels from outside the border\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp }this for chaining of methods\n   */\n  convolution(kernel, edgeHandling, cb) {\n    if (typeof edgeHandling === 'function' && typeof cb === 'undefined') {\n      cb = edgeHandling;\n      edgeHandling = null;\n    }\n\n    if (!edgeHandling) {\n      edgeHandling = this.constructor.EDGE_EXTEND;\n    }\n\n    const newData = Buffer.from(this.bitmap.data);\n    const kRows = kernel.length;\n    const kCols = kernel[0].length;\n    const rowEnd = Math.floor(kRows / 2);\n    const colEnd = Math.floor(kCols / 2);\n    const rowIni = -rowEnd;\n    const colIni = -colEnd;\n\n    let weight;\n    let rSum;\n    let gSum;\n    let bSum;\n    let ri;\n    let gi;\n    let bi;\n    let xi;\n    let yi;\n    let idxi;\n\n    this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(\n      x,\n      y,\n      idx\n    ) {\n      bSum = 0;\n      gSum = 0;\n      rSum = 0;\n\n      for (let row = rowIni; row <= rowEnd; row++) {\n        for (let col = colIni; col <= colEnd; col++) {\n          xi = x + col;\n          yi = y + row;\n          weight = kernel[row + rowEnd][col + colEnd];\n          idxi = this.getPixelIndex(xi, yi, edgeHandling);\n\n          if (idxi === -1) {\n            bi = 0;\n            gi = 0;\n            ri = 0;\n          } else {\n            ri = this.bitmap.data[idxi + 0];\n            gi = this.bitmap.data[idxi + 1];\n            bi = this.bitmap.data[idxi + 2];\n          }\n\n          rSum += weight * ri;\n          gSum += weight * gi;\n          bSum += weight * bi;\n        }\n      }\n\n      if (rSum < 0) {\n        rSum = 0;\n      }\n\n      if (gSum < 0) {\n        gSum = 0;\n      }\n\n      if (bSum < 0) {\n        bSum = 0;\n      }\n\n      if (rSum > 255) {\n        rSum = 255;\n      }\n\n      if (gSum > 255) {\n        gSum = 255;\n      }\n\n      if (bSum > 255) {\n        bSum = 255;\n      }\n\n      newData[idx + 0] = rSum;\n      newData[idx + 1] = gSum;\n      newData[idx + 2] = bSum;\n    });\n\n    this.bitmap.data = newData;\n\n    if (isNodePattern(cb)) {\n      cb.call(this, null, this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Set the alpha channel on every pixel to fully opaque\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp }this for chaining of methods\n   */\n  opaque(cb) {\n    this.scanQuiet(0, 0, this.bitmap.width, this.bitmap.height, function(\n      x,\n      y,\n      idx\n    ) {\n      this.bitmap.data[idx + 3] = 255;\n    });\n\n    if (isNodePattern(cb)) {\n      cb.call(this, null, this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Pixelates the image or a region\n   * @param {number} size the size of the pixels\n   * @param {number} x (optional) the x position of the region to pixelate\n   * @param {number} y (optional) the y position of the region to pixelate\n   * @param {number} w (optional) the width of the region to pixelate\n   * @param {number} h (optional) the height of the region to pixelate\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp }this for chaining of methods\n   */\n  pixelate(size, x, y, w, h, cb) {\n    if (typeof x === 'function') {\n      cb = x;\n      h = null;\n      w = null;\n      y = null;\n      x = null;\n    } else {\n      if (typeof size !== 'number') {\n        return throwError.call(this, 'size must be a number', cb);\n      }\n\n      if (isDef(x) && typeof x !== 'number') {\n        return throwError.call(this, 'x must be a number', cb);\n      }\n\n      if (isDef(y) && typeof y !== 'number') {\n        return throwError.call(this, 'y must be a number', cb);\n      }\n\n      if (isDef(w) && typeof w !== 'number') {\n        return throwError.call(this, 'w must be a number', cb);\n      }\n\n      if (isDef(h) && typeof h !== 'number') {\n        return throwError.call(this, 'h must be a number', cb);\n      }\n    }\n\n    const kernel = [\n      [1 / 16, 2 / 16, 1 / 16],\n      [2 / 16, 4 / 16, 2 / 16],\n      [1 / 16, 2 / 16, 1 / 16]\n    ];\n\n    x = x || 0;\n    y = y || 0;\n    w = isDef(w) ? w : this.bitmap.width - x;\n    h = isDef(h) ? h : this.bitmap.height - y;\n\n    const source = this.cloneQuiet();\n\n    this.scanQuiet(x, y, w, h, function(xx, yx, idx) {\n      xx = size * Math.floor(xx / size);\n      yx = size * Math.floor(yx / size);\n\n      const value = applyKernel(source, kernel, xx, yx);\n\n      this.bitmap.data[idx] = value[0];\n      this.bitmap.data[idx + 1] = value[1];\n      this.bitmap.data[idx + 2] = value[2];\n    });\n\n    if (isNodePattern(cb)) {\n      cb.call(this, null, this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Applies a convolution kernel to the image or a region\n   * @param {array} kernel the convolution kernel\n   * @param {number} x (optional) the x position of the region to apply convolution to\n   * @param {number} y (optional) the y position of the region to apply convolution to\n   * @param {number} w (optional) the width of the region to apply convolution to\n   * @param {number} h (optional) the height of the region to apply convolution to\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp }this for chaining of methods\n   */\n  convolute(kernel, x, y, w, h, cb) {\n    if (!Array.isArray(kernel))\n      return throwError.call(this, 'the kernel must be an array', cb);\n\n    if (typeof x === 'function') {\n      cb = x;\n      x = null;\n      y = null;\n      w = null;\n      h = null;\n    } else {\n      if (isDef(x) && typeof x !== 'number') {\n        return throwError.call(this, 'x must be a number', cb);\n      }\n\n      if (isDef(y) && typeof y !== 'number') {\n        return throwError.call(this, 'y must be a number', cb);\n      }\n\n      if (isDef(w) && typeof w !== 'number') {\n        return throwError.call(this, 'w must be a number', cb);\n      }\n\n      if (isDef(h) && typeof h !== 'number') {\n        return throwError.call(this, 'h must be a number', cb);\n      }\n    }\n\n    const ksize = (kernel.length - 1) / 2;\n\n    x = isDef(x) ? x : ksize;\n    y = isDef(y) ? y : ksize;\n    w = isDef(w) ? w : this.bitmap.width - x;\n    h = isDef(h) ? h : this.bitmap.height - y;\n\n    const source = this.cloneQuiet();\n\n    this.scanQuiet(x, y, w, h, function(xx, yx, idx) {\n      const value = applyKernel(source, kernel, xx, yx);\n\n      this.bitmap.data[idx] = this.constructor.limit255(value[0]);\n      this.bitmap.data[idx + 1] = this.constructor.limit255(value[1]);\n      this.bitmap.data[idx + 2] = this.constructor.limit255(value[2]);\n    });\n\n    if (isNodePattern(cb)) {\n      cb.call(this, null, this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Apply multiple color modification rules\n   * @param {array} actions list of color modification rules, in following format: { apply: '<rule-name>', params: [ <rule-parameters> ]  }\n   * @param {function(Error, Jimp)} cb (optional) a callback for when complete\n   * @returns {Jimp }this for chaining of methods\n   */\n  color: colorFn,\n  colour: colorFn\n});\n"],"mappings":"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"}